#!/bin/sh

## OpenEmbedded environment setup script for Rabbit project
##
## Before starting a build from a build shell; cd to the directory holding
## this file and then source the file:
##
## $ . set-oe-env
##
## Or, to update existing sub-repo clones to latest revision:
##
## $ PULL=1 . set-oe-env

## Meta data versions to use (branch name or commit sha) ##
RELBRANCH=rocko
POKY_VER=$RELBRANCH
META_OPENEMBEDDED_VER=$RELBRANCH
META_FREESCALE_VER=$RELBRANCH
META_FREESCALE_3RDPARTY_VER=$RELBRANCH


## Set TOPDIR, DL_DIR and DL_MIRROR ##
TOPDIR=$(readlink -f .)
[ -z "$DOWNLOADS" ] && DOWNLOADS="../downloads"
DL_DIR=$(readlink -f $DOWNLOADS)
if [ ! -d $DL_DIR ]; then
	echo "Error: Downloads directory '$DL_DIR' missing!"
	return 1
fi
[ -z "$DL_MIRROR" ] && DL_MIRROR="file://$(readlink -f ../../dlmirror)"
export TOPDIR DL_DIR DL_MIRROR

## Create an empty build directory ##
BDIR=$TOPDIR/build
if [ ! -d $BDIR ]; then
	echo "Creating a build directory..."
	mkdir $BDIR
fi

## Auto check-out used layers ##

clone_repo () {
	repo_url="$1"
	checkout="$2"
	repo_name=$(basename "${repo_url}" ".git")

	echo "Checking for $checkout of $repo_name"
	if [ ! -d "$repo_name" ]; then
		git clone -nq "$repo_url" "$repo_name"
		if [ $? -ne 0 ]; then
			echo "Error: Failed to clone $repo_url"
			return 1
		fi
		cd "$repo_name"
	else
		cd "$repo_name"
		git fetch
	fi

	git checkout -q "$checkout"
	if [ $? -ne 0 ]; then
		echo "Error: Failed to check out $checkout of $repo_name"
		return 1
	fi

	[ "$PULL" == "1" ] && git pull

	cd - > /dev/null
	return 0
}

clone_repo git://git.yoctoproject.org/poky.git $POKY_VER || return 1
clone_repo git://git.openembedded.org/meta-openembedded $META_OPENEMBEDDED_VER || return 1
clone_repo git://github.com/Freescale/meta-freescale.git $META_FREESCALE_VER || return 1
clone_repo git://github.com/Freescale/meta-freescale-3rdparty.git $META_FREESCALE_3RDPARTY_VER || return 1

## Source the OE-core supplied environment setup script ##
echo "Processing OE-core internal setup..."
OEROOT=$TOPDIR/poky
. $OEROOT/scripts/oe-buildenv-internal
if [ $? -ne 0 ]; then
	echo "Error: OE-core setup script failed!"
	return 1
fi

## Add to the BitBake environment awareness ##
export BB_ENV_EXTRAWHITE="$BB_ENV_EXTRAWHITE TOPDIR DL_DIR DL_MIRROR"

echo "Setup complete!"
